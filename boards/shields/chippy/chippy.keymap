#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HYPER    LS(LC(LA(LGUI)))



/ {
    // Activate third layer when both are pressed
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
                if-layers = <1 2>;
                    then-layer = <3>;
        };
    };

    behaviors {
        // Use this so the shift doesn't capitalize more than 1 key
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
      };
      // This will be used to make shift either on tap or hold
        lht: leftshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&skq>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB       &kp Q    &kp W    &kp E    &kp R    &kp T        &kp Y    &kp U    &kp I     &kp O    &kp P    &kp BSPC
                &kp LCTRL     &kp A    &kp S    &kp D    &kp F    &kp G        &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
                &lht LSHFT LSHFT     &kp Z    &kp X    &kp C    &kp V    &kp B        &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &mo 1
                                            &kp LALT   &mo 2    &kp RET        &kp SPACE &lt 1 ESC &kp LGUI      
                >;
        };

        lower_layer {
            bindings = <
                &kp TAB    &kp N1    &kp N2   &kp N3   &kp N4   &kp N5       &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp BSPC
                &kp LCTRL  &trans    &trans   &trans   &trans   &trans       &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans   &trans
                &kp LSHFT  &kp LSHFT &trans   &trans   &trans   &trans       &trans   &trans   &trans   &trans   &trans   &bootloader
                                           &kp LALT   &mo 2    &kp RET       &kp SPACE &kp HYPER   &kp LGUI
            >;
        };
        
        
        raise_layer {
            bindings = <
                &kp LC(GRAVE)  &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT     &kp CARET &kp AMPS &kp LPAR &kp RPAR &kp GRAVE  &kp BSPC
                &kp LC(V)  &trans   &kp MINUS  &kp PLUS &kp EQUAL  &kp HASH  &kp UNDER &kp COLON &kp LBRC &kp RBRC &kp FSLH &kp DOT
                &kp LC(C)  &kp LC(X)   &trans   &kp STAR &kp BSLH &kp PIPE      &kp TILDE &kp DQT  &kp LBKT &kp RBKT &kp AT   &trans
                                             &kp LALT  &kp ESC  &kp RET      &kp SPACE &mo 1 &kp LGUI
            >;
        };

         adjust_layer {
            bindings = <
                &bootloader     &trans       &trans       &trans       &trans       &trans         &trans &trans &trans &trans &trans &bootloader
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &trans
                &trans     &trans       &trans       &trans       &trans       &trans         &trans &trans &trans &trans &trans &trans
                                        &trans       &trans       &trans         &trans &trans &trans
            >;
        };

    };
};

// fix grave to be cntrl and grave to open the terminal in vscode